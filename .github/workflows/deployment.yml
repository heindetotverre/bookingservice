name: Deploy bookingservice to pi
on: 
  push: 
    branches: 
      - main
  workflow_dispatch:
env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_PATH: ${{ secrets.DOCKER_NAMESPACE }}/bookingservice:latest
  IMAGE_NAME: bookingservice
  USER_NAME: ${{ secrets.DOCKER_NAMESPACE }}
jobs: 
  test: 
    name: Unit test suite
    runs-on: self-hosted
    steps: 
      - name: Get code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  # publish:
  #   needs: test
  #   name: publish image
  #   # dont run on self hosted because of docker actions
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #     # emulate arm to build image for arm64 based pi server, building image fails on x86/amd64 architecture. this makes building image very slow ~30mins
  #   - uses: pguyot/arm-runner-action@v2
  #   - name: Login
  #     run: docker login -u ${{ github.actor }} -p ${{ env.DOCKER_PASSWORD }}
  #   - name: Build and Publish
  #     run: |
  #       docker build -t ${{ env.IMAGE_PATH }} .
  #       docker push ${{ env.IMAGE_PATH }}
  deploy:
    # needs: publish
    name: Copy config and start service
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Copy config
      run: |
        ls -ls
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cd ~/.ssh && cat id_rsa
        ssh -v -o StrictHostKeyChecking=no ${{ secrets.SERVER_HOST }} "mkdir -p ${{ env.IMAGE_NAME }}"
        # scp -o StrictHostKeyChecking=no -r ./compose.yml ${{ secrets.SERVER_HOST }}:/${{ env.IMAGE_NAME }}/
    #   uses: appleboy/scp-action@v0.1.7
    #   with:
    #     host: ${{ secrets.SERVER_HOST }}
    #     username: ${{ env.USER_NAME}}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     source: "*.yml"
    #     target: "~/${{ env.IMAGE_NAME }}/"
    #     timeout: 20s
    # - name: Start service
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.SERVER_HOST }}
    #     username: ${{ env.USER_NAME}}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     script: |
    #       cd ${{ env.IMAGE_NAME }}
    #       docker compose down
    #       docker system purge -y 
    #       ORG=${{ secrets.ORG_NAME}}
    #       TOKEN=${{ secrets.ORG_ACCESS_KEY}}
    #       docker compose up -d 
    #       exit
